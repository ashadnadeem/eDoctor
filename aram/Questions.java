/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aram;

import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Ashad Nadeem
 */
public class Questions extends javax.swing.JFrame{


    /**
     * Creates new form Questions
     */
    public Questions(Patient entry) throws FileNotFoundException,NullPointerException{
        
        this.symp = new Symptoms();
        this.symp.setAnswer(false);
        this.symp.Run();
        this.entry = entry;
        this.NoOfQues = symp.getCount();
        this.quesNo = 1;
        initComponents();
        this.setSize(440, 400);
        this.setVisible(true);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        questL = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        noJB = new javax.swing.JButton();
        maybeJB = new javax.swing.JButton();
        statusL = new javax.swing.JLabel();
        ProgressJPB = new javax.swing.JProgressBar();
        hiL = new javax.swing.JLabel();
        progresL = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        yesJB = new javax.swing.JButton();

        jButton1.setText("jButton1");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(jList1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Questions - ARAMcrop");
        setAlwaysOnTop(true);
        getContentPane().setLayout(null);

        questL.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        questL.setText("Q " + quesNo);
        getContentPane().add(questL);
        questL.setBounds(0, 59, 274, 37);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 3, 14)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(2);
        jTextArea1.setText(symp.getcurrentQues());
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(160, 60, 210, 130);

        noJB.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        noJB.setForeground(new java.awt.Color(255, 51, 51));
        noJB.setText("NO");
        noJB.setPreferredSize(new java.awt.Dimension(120, 40));
        noJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noJBActionPerformed(evt);
            }
        });
        getContentPane().add(noJB);
        noJB.setBounds(20, 220, 120, 40);

        maybeJB.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        maybeJB.setForeground(new java.awt.Color(255, 255, 51));
        maybeJB.setText("Maybe");
        maybeJB.setMaximumSize(new java.awt.Dimension(120, 40));
        maybeJB.setMinimumSize(new java.awt.Dimension(120, 40));
        maybeJB.setPreferredSize(new java.awt.Dimension(120, 40));
        maybeJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                maybeJBActionPerformed(evt);
            }
        });
        getContentPane().add(maybeJB);
        maybeJB.setBounds(140, 220, 121, 41);

        statusL.setText("status");
        getContentPane().add(statusL);
        statusL.setBounds(10, 339, 317, 26);

        ProgressJPB.setBackground(new java.awt.Color(0, 153, 51));
        ProgressJPB.setFont(new java.awt.Font("Tahoma", 2, 12)); // NOI18N
        ProgressJPB.setForeground(new java.awt.Color(153, 255, 153));
        ProgressJPB.setMaximum(symp.getCount());
        ProgressJPB.setMinimum(0);
        ProgressJPB.setToolTipText("");
        ProgressJPB.setBorder(javax.swing.BorderFactory.createCompoundBorder(null, javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, new java.awt.Color(51, 51, 51), new java.awt.Color(204, 204, 204), new java.awt.Color(204, 255, 204), null)));
        getContentPane().add(ProgressJPB);
        ProgressJPB.setBounds(11, 298, 390, 23);

        hiL.setFont(new java.awt.Font("Bauhaus 93", 3, 18)); // NOI18N
        hiL.setText("Hi, " + entry.getName().trim());
        getContentPane().add(hiL);
        hiL.setBounds(11, 22, 298, 26);

        progresL.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        progresL.setForeground(new java.awt.Color(51, 51, 51));
        progresL.setText("Progress...");
        getContentPane().add(progresL);
        progresL.setBounds(11, 271, 81, 21);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/aram/Genie.png"))); // NOI18N
        jLabel1.setMaximumSize(new java.awt.Dimension(340, 360));
        jLabel1.setMinimumSize(new java.awt.Dimension(340, 360));
        jLabel1.setPreferredSize(new java.awt.Dimension(340, 360));
        jLabel1.setVerifyInputWhenFocusTarget(false);
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 30, 170, 320);

        yesJB.setFont(new java.awt.Font("Algerian", 1, 24)); // NOI18N
        yesJB.setForeground(new java.awt.Color(0, 255, 102));
        yesJB.setText("YES");
        yesJB.setMaximumSize(new java.awt.Dimension(120, 40));
        yesJB.setMinimumSize(new java.awt.Dimension(120, 40));
        yesJB.setPreferredSize(new java.awt.Dimension(120, 40));
        yesJB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesJBActionPerformed(evt);
            }
        });
        getContentPane().add(yesJB);
        yesJB.setBounds(260, 220, 121, 41);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void noJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noJBActionPerformed
        // TODO add your handling code here:
        this.symp.setAnswer(false);
        System.out.print("NO");
        paint();
    }//GEN-LAST:event_noJBActionPerformed

    private void maybeJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_maybeJBActionPerformed
        // TODO add your handling code here:
        paint1();
    }//GEN-LAST:event_maybeJBActionPerformed

    private void yesJBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesJBActionPerformed
        // TODO add your handling code here:
        this.symp.setAnswer(true);
        System.out.print("YES");
        paint();
    }//GEN-LAST:event_yesJBActionPerformed
    
    public static void main(String[]args){
        
        try {
            Questions qTest = new Questions(new Patient());
            qTest.setVisible(true);
        } catch (FileNotFoundException ex) {
            System.err.println("Error1");
        } catch (NullPointerException ex) {
            System.err.println("Error2");
        }
    }
    
    public void paint(){
        this.symp.Run();
        //this.NoOfQues = symp.getCount();
        this.quesNo++;
        questL.setText("Q " + quesNo);
        //ProgressJPB.setString((int)(((quesNo-1)/(double)NoOfQues) * 100)+"%");
        //ProgressJPB.setValue((int)(((quesNo-1)/(double)NoOfQues) * 100));
        ProgressJPB.setValue(NoOfQues - symp.getCount());
        if(symp.getCount()<1)  try {
            EndOfQuestions();
        } catch (IOException ex) {
            //Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Blank ex) {
            Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextArea1.setText(symp.getcurrentQues());
        
    }
    public void paint1(){
        this.symp.MAYBE();
        //this.NoOfQues = symp.getCount();
        this.quesNo++;
        questL.setText("Q " + quesNo);
        //ProgressJPB.setString((int)(((quesNo-1)/(double)NoOfQues) * 100)+"%");
        //ProgressJPB.setValue((int)(((quesNo-1)/(double)NoOfQues) * 100));
        ProgressJPB.setValue(NoOfQues - symp.getCount());
        if(symp.getCount()<1)  try {
            EndOfQuestions();
        } catch (IOException ex) {
            //Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Blank ex) {
            Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(Questions.class.getName()).log(Level.SEVERE, null, ex);
        }
        jTextArea1.setText(symp.getcurrentQues());
        
    }
    public void EndOfQuestions() throws IOException, Blank, InterruptedException{
        String D;
        if(symp.getcurrentQues() != ""){
            //D = ("Your Desease is " + symp.getcurrentQues());
            entry.setDisease(symp.getcurrentQues().replace(",", ""));
            entry.writeDisease();
        }
        else{
            //D = ("Couldnt figure your Desease!");
            entry.setDisease("");
            entry.writeDisease();
        } 
        //String msg = "End Of question";
        //JOptionPane.showMessageDialog(null,D, msg, JOptionPane.WARNING_MESSAGE);
        this.setVisible(false);
        System.out.print("End");
        ResultGUI FinalResult = new ResultGUI(entry);
        //FinalResult.setVisible(true);
        //FinalResult.threading();
        
    }
    
    
    private Symptoms symp;
    private Patient entry;
    private int NoOfQues;
    private int quesNo;
    //private final String symp;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JProgressBar ProgressJPB;
    private javax.swing.JLabel hiL;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JButton maybeJB;
    private javax.swing.JButton noJB;
    private javax.swing.JLabel progresL;
    private javax.swing.JLabel questL;
    private javax.swing.JLabel statusL;
    private javax.swing.JButton yesJB;
    // End of variables declaration//GEN-END:variables
}
